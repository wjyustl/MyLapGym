<?xml version="1.0"?>
<!--
This scene belongs to a collection of 3 scenes designed to evaluate the impact of
the DefaultCollisionGroupManager component.

The 3 scenes are very similar: they all simulate two falling deformable cubes on a funnel.
The collision prevents the cubes falling through the funnel.

The difference between the 3 scenes is the way the mechanical system is solved.

This scene solves two different systems, one per cube.
There is a DefaultCollisionGroupManager component in this scene.
-->

<Node name="root" gravity="0 -9.81 0">
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase DefaultPipeline] -->
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [NewProximityIntersection] -->
    <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [LineCollisionModel PointCollisionModel TriangleCollisionModel] -->
    <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [DefaultContactManager] -->
    <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshOBJLoader] -->
    <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->
    <RequiredPlugin name="Sofa.Component.SolidMechanics.Spring"/> <!-- Needed to use components [RegularGridSpringForceField] -->
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Constant"/> <!-- Needed to use components [MeshTopology] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [QuadSetGeometryAlgorithms QuadSetTopologyContainer QuadSetTopologyModifier TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Grid"/> <!-- Needed to use components [RegularGridTopology] -->
    <RequiredPlugin name="Sofa.Component.Topology.Mapping"/> <!-- Needed to use components [Hexa2QuadTopologicalMapping Quad2TriangleTopologicalMapping] -->
    <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [InteractiveCamera VisualStyle] -->
    <RequiredPlugin name="SofaMiscCollision"/> <!-- Needed to use components [DefaultCollisionGroupManager] -->

    <VisualStyle displayFlags="showCollisionModels"/>

    <DefaultPipeline/>
    <BruteForceBroadPhase/>
    <BVHNarrowPhase/>
    <NewProximityIntersection name="Proximity" alarmDistance="2" contactDistance="0.7"/>
    <DefaultContactManager name="Response" response="PenalityContactForceField"/>
    <DefaultCollisionGroupManager name="GroupManager"/>
    <InteractiveCamera name="cam" position="0 0 -50" lookAt="0 0 0"/>

    <Node name="Cube1">
        <EulerImplicitSolver name="cg_odesolver" rayleighStiffness="0.1" rayleighMass="0.1"/>
        <CGLinearSolver iterations="25" name="linear solver" tolerance="1.0e-9" threshold="1.0e-9"/>
        <MechanicalObject name="mechanicalObject"/>
        <UniformMass totalMass="30"/>
        <RegularGridTopology name="grid" nx="5" ny="5" nz="5" computeHexaList="true" computeQuadList="false" xmin="-5" xmax="5" ymin="-5" ymax="5" zmin="-5" zmax="5"/>
        <RegularGridSpringForceField name="Springs" stiffness="270" damping="0"/>

        <Node name="Collision">
            <QuadSetTopologyContainer name="Quad_topology"/>
            <QuadSetTopologyModifier name="Modifier"/>
            <QuadSetGeometryAlgorithms name="GeomAlgo" template="Vec3d"/>
            <Hexa2QuadTopologicalMapping input="@../grid" output="@Quad_topology"/>

            <Node name="CollisionTriangles">
                <TriangleSetTopologyContainer  name="Container"/>
                <TriangleSetTopologyModifier   name="Modifier"/>
                <TriangleSetGeometryAlgorithms name="GeomAlgo"/>

                <Quad2TriangleTopologicalMapping input="@../Quad_topology" output="@Container" name="mapping_topo"/>

                <TriangleCollisionModel/>
                <LineCollisionModel/>
                <PointCollisionModel/>
            </Node>
        </Node>

    </Node>

    <Node name="Cube2">
        <EulerImplicitSolver name="cg_odesolver" rayleighStiffness="0.1" rayleighMass="0.1"/>
        <CGLinearSolver iterations="25" name="linear solver" tolerance="1.0e-9" threshold="1.0e-9"/>
        <MechanicalObject name="mechanicalObject"/>
        <UniformMass totalMass="30"/>
        <RegularGridTopology name="grid" nx="5" ny="5" nz="5" computeHexaList="true" computeQuadList="false" xmin="-4" xmax="6" ymin="6" ymax="16" zmin="-5" zmax="5"/>
        <RegularGridSpringForceField name="Springs" stiffness="270" damping="0"/>

        <Node name="Collision">
            <QuadSetTopologyContainer name="Quad_topology"/>
            <QuadSetTopologyModifier name="Modifier"/>
            <QuadSetGeometryAlgorithms name="GeomAlgo" template="Vec3d"/>
            <Hexa2QuadTopologicalMapping input="@../grid" output="@Quad_topology"/>

            <Node name="CollisionTriangles">
                <TriangleSetTopologyContainer  name="Container"/>
                <TriangleSetTopologyModifier   name="Modifier"/>
                <TriangleSetGeometryAlgorithms name="GeomAlgo"/>

                <Quad2TriangleTopologicalMapping input="@../Quad_topology" output="@Container" name="mapping_topo"/>

                <TriangleCollisionModel/>
                <LineCollisionModel/>
                <PointCollisionModel/>
            </Node>
        </Node>

    </Node>


    <Node name="Floor">
        <MeshOBJLoader name="loader" filename="mesh/floor2b.obj"/>
        <MeshTopology src="@loader"/>
        <MechanicalObject src="@loader" dy="-10" scale="0.5"/>
        <TriangleCollisionModel simulated="false"/>
        <LineCollisionModel simulated="false"/>
        <PointCollisionModel simulated="false"/>
    </Node>

</Node>
