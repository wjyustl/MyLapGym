import cmath
import numpy as np
from typing import Tuple, List

from sofa_env.scenes.tissue_manipulation.tissue_manipulation_env import TissueManipulationEnv


def create_valid_sampling_polygons(env: TissueManipulationEnv) -> None:
    """Creates polygons that describe the reachable positions of the tissue's ttp sampling points.

    This function takes a TissueManipulationEnv, and moves the gripper to all four cornes of its
    workspace. The positions of possible ttp sampling points are tracked and the polygon that
    traces the trajectories of thes points are saved to a txt file. You can copy-pase the output
    into this file.
    """

    dt = 0.1
    velocity = 0.02  # 20 mm/s

    low, high = env._workspace.get_low(), env._workspace.get_high()
    targets = [low[:], [low[0], low[1], high[2]], high[:], [high[0], high[1], low[2]], low[:]]

    gripper = env._gripper
    gripper.motion_path = gripper.create_linear_motion(targets.pop(0), dt=dt, velocity=velocity)

    random_action = env.action_space.sample()
    index_positions = []
    hit_corner = False

    while True:
        env.step(random_action)

        if hit_corner:
            index_positions.append(env._tissue.visual_ttp_node.MechanicalObject.position.array().copy())

        if len(gripper.motion_path) == 0 and len(targets) > 0:
            hit_corner = True
            motion_path = gripper.create_linear_motion(targets.pop(0), dt=dt, velocity=velocity)
            gripper.add_to_motion_path(motion_path)
        elif len(gripper.motion_path) == 0 and len(targets) == 0:
            print("simulation has finished")
            break

    all_positions = np.asarray(index_positions)

    with open("polygon_positions.txt", "w") as f:
        for i in range(all_positions.shape[1]):
            positions = all_positions[:, i, [0, 2]]
            f.write(f"POSITIONS_{i} = np.array({positions.tolist()})\n")
        inner_string = ", ".join(tuple(f"positions_{i}" for i in range(all_positions.shape[1])))
        f.write(f"POSITIONS = np.asarray([{inner_string}])\n")


def point_is_on_segment(point: Tuple[float, float], start: Tuple[float, float], end: Tuple[float, float]) -> bool:
    """Check if a point is on a line segment.

    Args:
        point (Tuple[float, float]): The point to check.
        start (Tuple[float, float]): The start of the line segment.
        end (Tuple[float, float]): The end of the line segment.

    Returns:
        bool: True if the point is on the line segment, False otherwise.
    """

    p0 = start[0] - point[0], start[1] - point[1]
    p1 = end[0] - point[0], end[1] - point[1]

    det = p0[0] * p1[1] - p1[0] * p0[1]
    prod = p0[0] * p1[0] + p0[1] * p1[1]

    return (det == 0 and prod < 0) or (p0[0] == 0 and p0[1] == 0) or (p1[0] == 0 and p1[1] == 0)


def point_is_in_polygon(point: Tuple[float, float], vertices: List[Tuple[float, float]], border_is_valid: bool = False) -> bool:
    """Check if a point is in a polygon.

    Note:
        Copied from https://www.linkedin.com/pulse/short-formula-check-given-point-lies-inside-outside-polygon-ziemecki/

    Args:
        point (tuple): The point to check.
        vertices (list): The vertices of the polygon.
        border_is_valid (bool): If True, the point is considered to be in the polygon if it is on
            the border of the polygon.

    Returns:
        bool: True if the point is in the polygon, False otherwise.
    """

    sum_ = complex(0, 0)

    for i in range(1, len(vertices) + 1):
        v0, v1 = vertices[i - 1], vertices[i % len(vertices)]

        if point_is_on_segment(point, v0, v1):
            return border_is_valid

        sum_ += cmath.log((complex(*v1) - complex(*point)) / (complex(*v0) - complex(*point)))

    return abs(sum_) > 1


POSITIONS_0 = np.array(
    [
        [-0.021463162978698, 0.11342003906364828],
        [-0.022671545026630963, 0.11687932912125293],
        [-0.023824594398222314, 0.12043763546355568],
        [-0.02464966762249016, 0.12402509823922203],
        [-0.025244342995009085, 0.127674300626018],
        [-0.02568586531001186, 0.1313317732770203],
        [-0.025976946529086036, 0.134543840105651],
        [-0.023458566560589315, 0.1349823211774988],
        [-0.019247774819710132, 0.135068701540438],
        [-0.014773142786837922, 0.13511673809579927],
        [-0.010566470718844544, 0.13514300517446173],
        [-0.006487905316384317, 0.13513340831429463],
        [-0.0024264822203906604, 0.1351218652789225],
        [0.001657937990638269, 0.1351080791910636],
        [0.0057681897652761506, 0.13508703530325572],
        [0.00988718055193209, 0.13505872451823656],
        [0.014009847658578108, 0.13502201526062885],
        [0.018137926720643717, 0.13497243516333882],
        [0.022274507297588547, 0.134904919912447],
        [0.02641984556650026, 0.1348151575392519],
        [0.030569482554498987, 0.13470078768055124],
        [0.03471679581997061, 0.13456142633303492],
        [0.03885550492956587, 0.13439839715625881],
        [0.04262518967755101, 0.13426863811098833],
        [0.04360988907007064, 0.13168955546771943],
        [0.0436150665222314, 0.12802959065772995],
        [0.0437027727360268, 0.12432071147281479],
        [0.04399781922424774, 0.1204983803897737],
        [0.04434540089989082, 0.11657727927614427],
        [0.04466572793054514, 0.11257099371931822],
        [0.04497454580342563, 0.10912871476808217],
        [0.04242328577416497, 0.10856543343218661],
        [0.03814872684355245, 0.10874355245710472],
        [0.03361769019559389, 0.10887040916606533],
        [0.02933611262155032, 0.10881345456722578],
        [0.02527050125727736, 0.1086265069025161],
        [0.021421442851918365, 0.10837223085253321],
        [0.01785368395027615, 0.10808747552080314],
        [0.014650279656185199, 0.10784276192344718],
        [0.011880550560976255, 0.10775516433803442],
        [0.009454875926220201, 0.10796591192678436],
        [0.0070671887560989815, 0.10852746504324233],
        [0.004223758511697637, 0.1093120036187537],
        [0.0005270643812979923, 0.11004779840498674],
        [-0.0037737289995813236, 0.11062337664588436],
        [-0.008515067331402884, 0.11097404054787627],
        [-0.013536189136360875, 0.11102905205283763],
        [-0.01866501470161945, 0.1108404785375953],
    ]
)
POSITIONS_1 = np.array(
    [
        [-0.03284416866058441, 0.11515898129389757],
        [-0.033444562691669164, 0.12067178135672046],
        [-0.03394982233848473, 0.12627809429797468],
        [-0.03427187558871869, 0.13177548994227756],
        [-0.03451177475911519, 0.13721605187356523],
        [-0.03470893752031261, 0.14261182198146916],
        [-0.03478348452420885, 0.14713741688093226],
        [-0.03127121680773456, 0.1480874304119274],
        [-0.026192509438122784, 0.14839342495727842],
        [-0.020832278797071193, 0.14861184602244515],
        [-0.015578738024242731, 0.1488354475315618],
        [-0.010333532280674327, 0.14905342591249462],
        [-0.005059472301813658, 0.14925929177433786],
        [0.0002549091260820788, 0.14944580673428523],
        [0.00560450657921626, 0.14960794061183547],
        [0.010975493599468032, 0.14974471213597348],
        [0.01635919355467124, 0.14985484204312616],
        [0.02174968594749447, 0.14993634190080085],
        [0.027142117767310882, 0.14998810229655987],
        [0.03253199807587259, 0.15001054964428487],
        [0.03791452390302222, 0.15000556657751093],
        [0.04328536311825046, 0.14997581248271483],
        [0.04864135806404707, 0.14992440506521956],
        [0.053183240217780675, 0.14985779246657535],
        [0.05429573317545337, 0.1461569484432575],
        [0.054499268903472925, 0.14108416548953523],
        [0.0546676103730654, 0.1358302100442565],
        [0.054849183980496916, 0.13050146596828172],
        [0.05500543457637576, 0.12512978636516714],
        [0.055115983377291705, 0.11972580585385362],
        [0.05521092238817875, 0.11539618922453482],
        [0.05156258203024111, 0.11483100604663427],
        [0.04646845500111433, 0.11486510726295178],
        [0.041061902705906324, 0.11491794682360237],
        [0.035767226152810715, 0.11493287040855349],
        [0.030536602054424117, 0.11490737565405837],
        [0.025358665140251577, 0.11485258755663666],
        [0.020197344966425453, 0.11476268852665653],
        [0.015057357917961305, 0.11462467112029623],
        [0.009878305567256383, 0.11440869873725962],
        [0.004720530092593283, 0.11406735108156474],
        [-0.000388169219986969, 0.11353873458978672],
        [-0.005371186248157072, 0.11283527158822619],
        [-0.01032733357239066, 0.11214048487126058],
        [-0.01527424038524645, 0.11160465492202826],
        [-0.020320663906263484, 0.11118700771438561],
        [-0.02542461703886885, 0.11082379309941788],
        [-0.030579141062670387, 0.1104610537024224],
    ]
)
POSITIONS_2 = np.array(
    [
        [-0.02428981019405692, 0.11686863794637034],
        [-0.025168690030768263, 0.1210896288997548],
        [-0.026033978208813723, 0.1254399814069263],
        [-0.026695768931199813, 0.12981360270358883],
        [-0.027214829557348927, 0.13423515423741264],
        [-0.027637219893284118, 0.1386732558456241],
        [-0.027885506691677678, 0.14248592061123533],
        [-0.02474614829440776, 0.14301993873724436],
        [-0.019997912399409047, 0.14308679820762402],
        [-0.014973677318158804, 0.14307267990502318],
        [-0.010141180260198626, 0.14302640748743814],
        [-0.005389833284797117, 0.1429371685917989],
        [-0.0006540661153023508, 0.14283501291779227],
        [0.004090906117784536, 0.1427228937029946],
        [0.008844963382349273, 0.1425993477010518],
        [0.01359395144019727, 0.14246592872922834],
        [0.01833287213290914, 0.1423237807168483],
        [0.023061893998036917, 0.1421720880032854],
        [0.027782811868137913, 0.14200981798336854],
        [0.03249632650957633, 0.14183621702525928],
        [0.037200486993210435, 0.14165145865991136],
        [0.04189224765267205, 0.1414566544286051],
        [0.046569063858425755, 0.14125366204319084],
        [0.050689815658614024, 0.14110151873475313],
        [0.05173122407224791, 0.13784027954824404],
        [0.05183811793162352, 0.13331146259671053],
        [0.05198298151851663, 0.12865450027390068],
        [0.05226071847620664, 0.12389437690837757],
        [0.05256275011336556, 0.1190449176264761],
        [0.05282722875162972, 0.11411069457283884],
        [0.05306009933864185, 0.11004151462641588],
        [0.0501321931905922, 0.10946511588179236],
        [0.04561424902203429, 0.10960805179511386],
        [0.040825653845150585, 0.1097558376871765],
        [0.03623572593270555, 0.10984066824110428],
        [0.03179415149037559, 0.10989795094098481],
        [0.02748563909230025, 0.1099668195268795],
        [0.02332229750205314, 0.11007011967993462],
        [0.019337950401882596, 0.11024665264434848],
        [0.015525503061942177, 0.1105573276236661],
        [0.011819868837157176, 0.11104771195813742],
        [0.008016318660219596, 0.11168757805267529],
        [0.00386756526121799, 0.11235958564571998],
        [-0.0007882996643693799, 0.11290347730353784],
        [-0.005741372532967302, 0.1133282658307693],
        [-0.010962708040565523, 0.11361095473552643],
        [-0.01635592116157064, 0.11367842150920415],
        [-0.021818612754250993, 0.11353728109802345],
    ]
)
POSITIONS_3 = np.array(
    [
        [-0.026438267606707762, 0.12009119480651763],
        [-0.026985243356927306, 0.1249391036217026],
        [-0.0275521186856638, 0.1299305857314023],
        [-0.028041480676135672, 0.13493585277495057],
        [-0.028471216725513733, 0.1399706225638675],
        [-0.028861001194166205, 0.1450301051876323],
        [-0.029057870377922304, 0.14931564085613025],
        [-0.025389502768624183, 0.1499050432267897],
        [-0.02018180090895626, 0.14995727080805252],
        [-0.014703113481738764, 0.14987625205560404],
        [-0.00933839812650948, 0.1497533671729827],
        [-0.004015011015206118, 0.14958173488429216],
        [0.0012953610218979072, 0.1493842961145135],
        [0.006602152759298128, 0.14916795722697263],
        [0.011901295482510725, 0.14893478832337795],
        [0.017181108881899654, 0.14868740935201424],
        [0.02243608922627962, 0.1484294726633118],
        [0.0276645041352648, 0.14816453672199625],
        [0.032866978685518994, 0.1478966146152745],
        [0.03804513703503021, 0.1476296021306116],
        [0.0432002294899935, 0.14736707577012947],
        [0.048333601313305045, 0.14711222136084437],
        [0.05344727598780378, 0.14686773673235767],
        [0.05784355652520334, 0.1466929344961293],
        [0.058939279585159765, 0.1428563480138744],
        [0.059161829256027115, 0.13762345767451484],
        [0.05937085805843101, 0.13218570460495518],
        [0.05963635240690859, 0.12666523886271008],
        [0.059894018988199876, 0.12107221586438485],
        [0.06010083316484352, 0.11540524621083068],
        [0.060262014307254405, 0.1108707311015488],
        [0.05707777041756186, 0.11033696058908632],
        [0.05234756213740885, 0.11045917467803738],
        [0.04735973887332201, 0.11064426400964361],
        [0.04253360562457294, 0.11089066754849192],
        [0.0377900751550586, 0.11121261336076699],
        [0.033091071643743926, 0.11162908962972827],
        [0.028393788551497497, 0.11214496127112747],
        [0.02367982919605912, 0.11276593203118639],
        [0.01887148148288507, 0.113482320544189],
        [0.013935042983972917, 0.11423877322223056],
        [0.008792503247032782, 0.11490593799778215],
        [0.0034642559462035394, 0.11539636371027678],
        [-0.0020064557817226244, 0.11570563836607606],
        [-0.007491194438495996, 0.11595440706851956],
        [-0.013069930961884111, 0.11614074130222769],
        [-0.0186928444559632, 0.11620208012550193],
        [-0.024344751848892045, 0.11611014471605449],
    ]
)
POSITIONS_4 = np.array(
    [
        [-0.016282778896360317, 0.11835061108477823],
        [-0.017258389116998278, 0.12142044049368941],
        [-0.018317760484674806, 0.12463823323321191],
        [-0.01919973415526117, 0.12799149229974724],
        [-0.019917088922747204, 0.13148804215565274],
        [-0.02051340316330212, 0.13506369731370496],
        [-0.020905693517587382, 0.1382362411579153],
        [-0.018131634080424758, 0.1384162634993567],
        [-0.013680120344272649, 0.13822797664473252],
        [-0.008972599037531476, 0.13798057303606542],
        [-0.004533450480635573, 0.13767034721858276],
        [-0.00023803262709054182, 0.13729157493072763],
        [0.004005575700749089, 0.13689303013643547],
        [0.008231371135167675, 0.13648820789275048],
        [0.012442015242441868, 0.13607813747303435],
        [0.016621819304345684, 0.13566758550771957],
        [0.02076821944189421, 0.1352611951672031],
        [0.0248862883675902, 0.13486110575819665],
        [0.028983922168403245, 0.134468707358483],
        [0.03306742821969165, 0.13408450329583207],
        [0.03713890497417807, 0.13370898531522438],
        [0.04119811922133849, 0.13334301367486284],
        [0.045244539609146074, 0.13298773911346956],
        [0.04894850336665221, 0.13272977961049312],
        [0.04990328593778072, 0.1298349687355264],
        [0.0499036419997962, 0.12576617510279164],
        [0.049962985842196946, 0.12158933728868618],
        [0.050214700980861005, 0.11727753596592677],
        [0.05050185532600407, 0.1128443923854884],
        [0.05073530003886514, 0.1083010480430652],
        [0.0509424532832028, 0.10446225281946253],
        [0.0487605561255121, 0.10393888450291877],
        [0.0448124524422394, 0.10419356490150139],
        [0.040651385940487006, 0.10447293469349053],
        [0.03680824935056516, 0.1047013325737023],
        [0.03319867929269715, 0.10495154442542252],
        [0.029776708743071974, 0.10529473926788174],
        [0.026558703758649233, 0.10578327316133906],
        [0.02356106028540605, 0.1064954323777817],
        [0.020751699330398193, 0.10752745258347228],
        [0.017961944409089613, 0.10892177222197745],
        [0.01490505838856103, 0.11054754677005489],
        [0.011290055730957345, 0.11218695890568994],
        [0.006951973706245185, 0.11356404546132381],
        [0.002168015486125086, 0.11467971987097679],
        [-0.0029488272725485447, 0.11549991325544026],
        [-0.008296321478188623, 0.11596534798195689],
        [-0.013784321774627241, 0.11610100281978525],
    ]
)
POSITIONS_5 = np.array(
    [
        [-0.03447510048013785, 0.11201067632403462],
        [-0.03512451023619406, 0.11723039605374566],
        [-0.03564677357456476, 0.12247658176887503],
        [-0.03589568173730327, 0.12756739329932876],
        [-0.03602909537299909, 0.13259599555704485],
        [-0.03609623541720289, 0.13755737256299436],
        [-0.036112546385633645, 0.14175307998473258],
        [-0.03307557515239001, 0.14282846999996798],
        [-0.028374151876657157, 0.14318850378842365],
        [-0.023408101609552593, 0.1435618246128566],
        [-0.01860994518154477, 0.14396760637112552],
        [-0.013839233458627717, 0.14439612910864036],
        [-0.009024811384300245, 0.14482437361048095],
        [-0.004142563280439481, 0.14523799147147193],
        [0.0008057869290033585, 0.14562575066838815],
        [0.005804064881883864, 0.14598469475663844],
        [0.010843393701211788, 0.14631049820248032],
        [0.01591857052609576, 0.14659656018750478],
        [0.021024499514478535, 0.14683704719272556],
        [0.026154628839526343, 0.1470286353383446],
        [0.03130029017279368, 0.1471709383956522],
        [0.03645230394504044, 0.1472655224883915],
        [0.04160237771725414, 0.1473154233441655],
        [0.04601236661882686, 0.14729491122457836],
        [0.047042209824661695, 0.14415686397745825],
        [0.0470930745399885, 0.13973944051347972],
        [0.04710744824684157, 0.1352012491257813],
        [0.0471482301955813, 0.1305570589449081],
        [0.047161564575878695, 0.1258658146481039],
        [0.04712992229464123, 0.12115985995066694],
        [0.04712057256882278, 0.11728022640342387],
        [0.04348800922313184, 0.11672365588881027],
        [0.038359162598368635, 0.11675311149846537],
        [0.03291107261438127, 0.1167607071346979],
        [0.027610747174734006, 0.11660795698025944],
        [0.022438213689535715, 0.11630583984665566],
        [0.01739683260722866, 0.1158907646923534],
        [0.012478864900977701, 0.11537749927639239],
        [0.007710546973703176, 0.11478126461130442],
        [0.00304396609327597, 0.11410463597338923],
        [-0.001465092921900465, 0.11332952663220754],
        [-0.0057763342640760815, 0.11237775211878484],
        [-0.00983834708168256, 0.11124033694462161],
        [-0.013952456856906837, 0.11017051519898369],
        [-0.018227614635302106, 0.10934543526606536],
        [-0.022699400574539872, 0.10866794524184355],
        [-0.027317160740490714, 0.10807980993589973],
        [-0.03206438146950273, 0.10753938578693648],
    ]
)
POSITIONS_6 = np.array(
    [
        [-0.022321324711499863, 0.12503522349390372],
        [-0.02260903243811718, 0.12959593036152506],
        [-0.0229692735542052, 0.13429753734695898],
        [-0.023363387790447474, 0.1390554012434103],
        [-0.023752235653883555, 0.1438844803118214],
        [-0.024129613138520998, 0.14877450157158237],
        [-0.024317087170615297, 0.15293406388282965],
        [-0.020469812841213266, 0.1533495257977481],
        [-0.015038806880666757, 0.15320467017378558],
        [-0.00942540247305891, 0.1529510141114023],
        [-0.00390196376511023, 0.15263355291092498],
        [0.0015660553390478055, 0.15226351992895262],
        [0.00700495504066242, 0.15187059909449344],
        [0.012425007300967447, 0.15146921126626914],
        [0.017827191429724713, 0.15106377704598672],
        [0.023206411215116164, 0.1506563110088895],
        [0.02856225281197524, 0.15025113364987847],
        [0.03389702247512891, 0.14985284515977146],
        [0.03921476234843052, 0.1494667029743751],
        [0.04452012481419289, 0.1490977189539267],
        [0.04981739005629741, 0.14875035173629936],
        [0.055110877979349986, 0.14842861555620068],
        [0.060405323592592534, 0.14813594982175518],
        [0.06493624505664287, 0.14794924447809754],
        [0.06605982670170231, 0.144196746061916],
        [0.06630876843623275, 0.13894851410934678],
        [0.06653226370301327, 0.13352268935895817],
        [0.06678369982850685, 0.1280176244809559],
        [0.06701616248377475, 0.12243751742125722],
        [0.06719899801805004, 0.11678338017804427],
        [0.06731204145456066, 0.11224972221526265],
        [0.06388388408204182, 0.11181185418282148],
        [0.058912521040930775, 0.11198936552702408],
        [0.05372535191180206, 0.11222882109700197],
        [0.0486711807996767, 0.11255411089842467],
        [0.043706614269956146, 0.11296333369969375],
        [0.038812119317129586, 0.1134904970594776],
        [0.03395883794001618, 0.114142451511603],
        [0.029135094764874903, 0.1149568144020209],
        [0.02427469275559242, 0.1159412753030916],
        [0.019311298400254227, 0.11708359332558821],
        [0.014124415633823995, 0.1182025160462177],
        [0.008685792889347165, 0.11914331655577282],
        [0.003015198926148248, 0.11985201667926143],
        [-0.002762486112943986, 0.12046515951148905],
        [-0.00865187747863097, 0.12096911618505916],
        [-0.014618792769034303, 0.12126393119403592],
        [-0.020626420385999142, 0.12131567587181258],
    ]
)
POSITIONS_7 = np.array(
    [
        [-0.015568922943182767, 0.12388416929314912],
        [-0.01609672353833777, 0.12714634903051975],
        [-0.01682807993968295, 0.13054541357233912],
        [-0.017555336752171663, 0.13410989544579716],
        [-0.018222130619977767, 0.13785050574547106],
        [-0.01882498755486497, 0.14171351742257468],
        [-0.019197385760630625, 0.1451198876662971],
        [-0.01591717202634162, 0.14521962752096265],
        [-0.011013147111426978, 0.14489332737274088],
        [-0.005856850309094695, 0.14447262236702504],
        [-0.000920210416168542, 0.14395826138294981],
        [0.0038917843567927123, 0.14334808096332413],
        [0.008635239327598044, 0.1426960871230708],
        [0.013331426219802113, 0.1420261823070144],
        [0.01798074286930701, 0.14134554991622553],
        [0.02257005547588197, 0.1406614393223228],
        [0.02709780112252654, 0.13998340078876786],
        [0.03156977210514037, 0.1393201825215733],
        [0.03599576725515723, 0.13868024238694587],
        [0.040385885836895695, 0.13807013985590744],
        [0.044747652376169164, 0.13749460515271103],
        [0.04908688217949415, 0.13695709961234764],
        [0.053408898900973605, 0.1364599095871167],
        [0.057307488016466325, 0.13612021190735957],
        [0.0582919493007287, 0.1327444531146402],
        [0.058369293342491836, 0.12806269691723665],
        [0.058471214751282766, 0.12319303893941412],
        [0.05872356954347993, 0.11817643714312988],
        [0.05898984917521774, 0.11302054495124046],
        [0.05918552920487578, 0.10773075852039818],
        [0.05932830021048919, 0.10337030704129184],
        [0.057148908960941915, 0.10292080345512422],
        [0.0531660442224584, 0.10322068529218217],
        [0.04900552449669942, 0.10362225426590271],
        [0.04517414741817324, 0.10412937180308253],
        [0.041547195259017566, 0.10480742497717413],
        [0.03804299125756917, 0.10572236430158648],
        [0.034624240113559135, 0.10692493825663461],
        [0.03124272300658759, 0.10848430126219198],
        [0.027774000437200266, 0.11045282241937156],
        [0.024009742269479648, 0.11276081300542752],
        [0.019721888395925664, 0.11509030655419879],
        [0.014872572073287743, 0.11714080160416324],
        [0.009540401718572176, 0.1187073386227776],
        [0.003990411689623754, 0.11993998098494256],
        [-0.001748813182719964, 0.1208341865406312],
        [-0.0076032085133382185, 0.12133770073731887],
        [-0.013553412586232612, 0.12147593452457464],
    ]
)
POSITIONS_8 = np.array(
    [
        [-0.025921242887321977, 0.10878445465725275],
        [-0.027140309349095063, 0.1125926016258621],
        [-0.028202611445507758, 0.11642453192036098],
        [-0.028857888830022976, 0.12017341038612654],
        [-0.029262455311014894, 0.12390333810203584],
        [-0.02951595599081384, 0.12758419681897007],
        [-0.02968733460788395, 0.13079101754116793],
        [-0.027455025418073, 0.13147490063187328],
        [-0.023485763204226566, 0.1317854278002672],
        [-0.0192662974471278, 0.13207813626039808],
        [-0.015307210431877315, 0.1323898057846295],
        [-0.011458695301577018, 0.132703053582786],
        [-0.007589896356856351, 0.13301944687350944],
        [-0.003660070119482599, 0.13332832108850254],
        [0.0003301672481658317, 0.13361878963813367],
        [0.0043603607757316575, 0.13388734613056194],
        [0.008421227217745844, 0.13412964685254947],
        [0.012510040354909484, 0.13433847169753746],
        [0.016625401079772898, 0.13450694817012607],
        [0.02076341858816541, 0.13463040577973837],
        [0.024916055925003316, 0.1347070575313268],
        [0.02907367887005152, 0.1347373603058927],
        [0.033227415766542735, 0.13472360828296015],
        [0.03697698341985879, 0.13467380396069661],
        [0.03796600935250213, 0.1323592946169228],
        [0.037976305344936054, 0.1290881247794338],
        [0.03803246361632139, 0.12578040371618576],
        [0.03825163327424767, 0.12237954768548823],
        [0.03849747713929503, 0.11891616348922579],
        [0.03871049139345649, 0.11542049360223576],
        [0.03895102520557664, 0.11239739991735312],
        [0.0362712818803947, 0.1119102540033373],
        [0.03178287276460065, 0.11204171924563007],
        [0.0270408562434513, 0.1120984827176294],
        [0.022542694421102565, 0.1119072323117944],
        [0.018248958824534863, 0.11150526223023739],
        [0.014161977991636761, 0.11095441364884234],
        [0.010337892859278072, 0.11027672592971675],
        [0.0068624221412795375, 0.10952086546542592],
        [0.0038109544323102823, 0.10875202567630465],
        [0.0011836729669935885, 0.10808413965908203],
        [-0.0011691193215831253, 0.10756798932086578],
        [-0.003600627658141232, 0.10719154497703043],
        [-0.0066545167634926294, 0.10695259255136996],
        [-0.010295127527727385, 0.10677664976390783],
        [-0.014356149841915132, 0.1065297205554224],
        [-0.018657092489502373, 0.10617009928819304],
        [-0.023083047751823512, 0.10574453423165578],
    ]
)

POSITIONS = np.asarray((POSITIONS_0, POSITIONS_1, POSITIONS_2, POSITIONS_3, POSITIONS_4, POSITIONS_5, POSITIONS_6, POSITIONS_7, POSITIONS_8))


def point_is_reachable(point: Tuple[float, float], manipulation_point_index: int) -> bool:
    """Checks if a point is reachable by a specific manipulation point on the tissue.

    NOTE:
        Uses the global variable `POSITIONS` to check if the point is reachable.
        To change the positions, change the global variable as described in
        ``sofa_env.scenes.tissue_manipulation.sampling.create_valid_sampling_polygons``.

    Args:
        point: The point to check.
        manipulation_point_index: The index of the manipulation point in env._tissue.visual_ttp_node.MechanicalObject.position.array().

    Returns:
        True if the point is reachable, False otherwise.
    """

    polygon_vertices = POSITIONS[manipulation_point_index]

    return point_is_in_polygon(point, vertices=polygon_vertices, border_is_valid=False)


def show_test_of_boundaries(manipulation_point_index: int) -> None:
    """Shows a plot of the defined boundaries for a specific manipulation point together with a few sampled points.

    Args:
        manipulation_point_index: The index of the manipulation point in env._tissue.visual_ttp_node.MechanicalObject.position.array().
    """

    import matplotlib.pyplot as plt

    min_points = np.array((np.min(POSITIONS[manipulation_point_index, :, 0]), np.min(POSITIONS[manipulation_point_index, :, 1])))
    max_points = np.array((np.max(POSITIONS[manipulation_point_index, :, 0]), np.max(POSITIONS[manipulation_point_index, :, 1])))
    scatter_points = np.random.uniform(min_points, max_points, size=(1000, 2))
    in_scatter_points = []
    out_scatter_points = []
    for point in scatter_points:
        if point_is_reachable(point, manipulation_point_index):
            in_scatter_points.append(point)
        else:
            out_scatter_points.append(point)

    in_scatter_points = np.array(in_scatter_points)
    out_scatter_points = np.array(out_scatter_points)

    plt.plot(POSITIONS[manipulation_point_index, :, 0], POSITIONS[manipulation_point_index, :, 1])
    plt.scatter(in_scatter_points[:, 0], in_scatter_points[:, 1], color="g")
    plt.scatter(out_scatter_points[:, 0], out_scatter_points[:, 1], color="r")
    plt.axis("scaled")
    plt.show()
